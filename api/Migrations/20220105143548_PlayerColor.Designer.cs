// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api.Models;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20220105143548_PlayerColor")]
    partial class PlayerColor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Player", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Player", (string)null);

                    b.HasData(
                        new
                        {
                            Name = "Larsson",
                            Color = "#665758"
                        });
                });

            modelBuilder.Entity("api.Models.Tile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ownerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ownerId");

                    b.ToTable("Tile", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            color = "#fcba03",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 2,
                            color = "#fc4e03",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 3,
                            color = "#035afc",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 4,
                            color = "#c203fc",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 5,
                            color = "#691c46",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 6,
                            color = "#2f732f",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 7,
                            color = "#5a947f",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 8,
                            color = "#bf7ca1",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 9,
                            color = "#de142c",
                            ownerId = "Larsson"
                        },
                        new
                        {
                            Id = 10,
                            color = "#665758",
                            ownerId = "Larsson"
                        });
                });

            modelBuilder.Entity("api.Models.Tile", b =>
                {
                    b.HasOne("api.Models.Player", "owner")
                        .WithMany()
                        .HasForeignKey("ownerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("owner");
                });
#pragma warning restore 612, 618
        }
    }
}
